import os
import streamlit as st
import base64
import pandas as pd
from generate_recipe_openai import generate_recipe  # Assurez-vous que ce fichier est correctement configur√©
from recipe_finder import filter_recipes_by_ingredients

# Configuration de la page Streamlit
st.set_page_config(
    page_title="Clicook",
    page_icon="üç¥",
    layout="wide",
)


# D√©finir le chemin absolu vers le dossier `assets` et le fichier CSV
ASSETS_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), "../assets"))
CSV_FILE_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), "../data/cleaned_recipes.csv"))

# CSS personnalis√©

def inject_css():
    st.markdown(
        """
        <style>
        /* Global styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
        }

        /* Navbar */
        .navbar {
            background-color: #2c3e50;
            padding: 15px 0;
            display: flex;
            justify-content: space-around;
            align-items: center;
            font-family: Arial, sans-serif;
            color: white;
        }

        .navbar a {
            text-decoration: none;
            color: white;
            font-weight: bold;
            padding: 10px 20px;
            transition: color 0.3s ease-in-out;
        }

        .navbar a:hover {
            color: #18bc9c;
        }

        /* Footer */
        .footer {
            background-color: #2c3e50;
            color: white;
            padding: 30px 0;
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            margin-top: 50px;
        }

        .footer-section h4 {
            color: #18bc9c;
            margin-bottom: 10px;
        }

        .footer-section a {
            color: white;
            text-decoration: none;
            display: block;
            margin-bottom: 5px;
            font-size: 0.9rem;
        }

        .footer-section a:hover {
            text-decoration: underline;
        }
        </style>
        """,
        unsafe_allow_html=True,
    )

# Inject CSS
inject_css()


# Barre de navigation
def render_navbar():
    st.markdown(
        """
        <div class="navbar">
            <a href="?page=home">Accueil</a>
            <a href="?page=about_us">Qui sommes-nous</a>
            <a href="?page=ia_choice">G√©n√©rer avec IA</a>
            <a href="?page=csv_search">Recherche dans CSV</a>
            <a href="?page=guide">Guide</a>
        </div>
        """,
        unsafe_allow_html=True,
    )

# Pied de page
def render_footer():
    st.markdown(
        """
        <div class="footer">
            <div class="footer-section">
                <h4>A propos</h4>
                <a href="#">Notre mission</a>
                <a href="#">Besoin d'aide ?</a>
                <a href="#">Plan de site</a>
            </div>
            <div class="footer-section">
                <h4>L'√©quipe Clicook</h4>
                <a href="#">Partenariats</a>
                <a href="#">Presse</a>
            </div>
            <div class="footer-section">
                <h4>Suivez-nous</h4>
                <a href="#"><img src="https://upload.wikimedia.org/wikipedia/commons/a/a5/Instagram_icon.png" alt="Instagram" width="30"></a>
                <a href="#"><img src="https://upload.wikimedia.org/wikipedia/commons/4/44/Facebook_Logo.png" alt="Facebook" width="30"></a>
            </div>
        </div>
        """,
        unsafe_allow_html=True,
    )


# Fonction pour charger une image avec gestion des erreurs
def get_image(image_name):
    try:
        image_path = os.path.join(ASSETS_DIR, image_name)
        return image_path
    except Exception as e:
        st.error(f"Erreur : {e}")
        return None

# Page d'accueil
def home_page():
    render_navbar()
    st.title("Bienvenue sur Clicook")
    st.markdown("Votre assistant culinaire propuls√© par l'IA et vos id√©es.")

    # V√©rifier et afficher les ic√¥nes
    ia_image = get_image("icone_IA.png")
    csv_image = get_image("icone_base.png")

    if ia_image and csv_image:
        st.markdown(
            f"""
            <div style="display: flex; justify-content: space-around; margin: 50px 0;">
                <a href="?page=ia_choice">
                    <img src="data:image/png;base64,{base64.b64encode(open(ia_image, 'rb').read()).decode()}" style="width: 150px; height: 150px;" />
                    <p style="text-align: center;">G√©n√©rer avec IA</p>
                </a>
                <a href="?page=csv_search">
                    <img src="data:image/png;base64,{base64.b64encode(open(csv_image, 'rb').read()).decode()}" style="width: 150px; height: 150px;" />
                    <p style="text-align: center;">Recherche dans CSV</p>
                </a>
            </div>
            """,
            unsafe_allow_html=True,
        )

    render_footer()

# Page "Qui sommes-nous"
def about_us_page():
    render_navbar()
    st.title("Qui sommes-nous ?")
    image_path = get_image("nous.jpg")

    if image_path:
    	st.image(image_path, caption="L'√©quipe Clicook", use_container_width=True)



    st.write(
 """

    ### **L'histoire de Clicook**
    Bienvenue chez **Clicook**, une initiative n√©e de l'imagination et de la passion de trois √©tudiantes en Mast√®re **MOSEF** √† Paris :  
    **Charlotte**, **Chirine** et **Hella**. Issues de parcours acad√©miques divers ‚Äì entre sciences de l'ing√©nieur, intelligence artificielle et gestion de projets ‚Äì nous nous sommes r√©unies autour d'une ambition commune :  
    **transformer la cuisine du quotidien gr√¢ce √† la technologie**.  

    Tout a commenc√© lors de nos √©tudes, o√π la rigueur des cours, les projets interminables et les deadlines serr√©es laissaient peu de temps pour pr√©parer des repas √©quilibr√©s.  
    Comme beaucoup d'√©tudiants et de jeunes actifs, nous avons souvent √©t√© confront√©es √† des choix alimentaires rapides mais peu satisfaisants.  
    C'est dans ce contexte que l'id√©e de **Clicook** a germ√© :  
    *"Et si l'intelligence artificielle pouvait nous aider √† mieux cuisiner, plus rapidement et avec les ingr√©dients d√©j√† disponibles dans notre cuisine ?"*

    ---

    ### **Pourquoi Clicook ?**  
    En tant qu'√©tudiantes, nous connaissons les d√©fis quotidiens li√©s √† la pr√©paration des repas :  
    - **Manque de temps** pour cuisiner entre les cours et les obligations.  
    - **Absence d'inspiration** lorsqu'il s'agit d'imaginer des recettes.  
    - **Budget limit√©**, qui rend l'optimisation des courses essentielle.  

    **Clicook** est n√© pour offrir une **solution innovante** :  
    des recettes **personnalis√©es, rapides et adapt√©es √† vos besoins.**

    ---

    ### **Ce que nous proposons**  
    Avec **Clicook**, b√©n√©ficiez de deux outils puissants :  

    - üß† **Une intelligence artificielle** capable de g√©n√©rer des recettes personnalis√©es selon vos pr√©f√©rences alimentaires, votre budget et vos √©quipements.  
    - üîé **Un moteur de recherche** intuitif qui vous permet de trouver des recettes adapt√©es aux ingr√©dients que vous avez d√©j√† chez vous.  

    Ensemble, ces fonctionnalit√©s vous permettent de cuisiner **sans stress, sans gaspillage et en toute simplicit√©**.

    ---

    ### **Nos valeurs**  
    - üöÄ **Innovation** : Tirer parti des derni√®res avanc√©es technologiques pour r√©volutionner votre exp√©rience culinaire.  
    - üë©‚Äçüç≥ **Accessibilit√©** : Permettre √† tout le monde, quel que soit son niveau en cuisine, de pr√©parer des plats d√©licieux.  
    - üåç **√âcologie** : R√©duire le gaspillage alimentaire en utilisant ce que vous avez d√©j√† dans votre r√©frig√©rateur.  
    - ü§ù **Communaut√©** : Cr√©er un espace d'√©change et de partage autour de la passion de la cuisine.

    ---

    ### **Notre mission**  
    Chez **Clicook**, notre ambition est simple :  
    **Faire de la cuisine une exp√©rience facile, agr√©able et innovante pour tous.**  

    Que vous soyez :  
    - Un **√©tudiant occup√©** en qu√™te de repas rapides,  
    - Un **parent d√©bord√©** cherchant des solutions simples,  
    - Ou un **amateur de cuisine** √† la recherche de nouvelles inspirations,  

    **Clicook est fait pour vous !**  

    En combinant **technologie** et **cr√©ativit√© culinaire**, nous voulons vous accompagner dans chaque √©tape de la pr√©paration de vos repas.

    ---

    ### **Rejoignez-nous !**  
    üöÄ Rejoignez l'aventure **Clicook** d√®s aujourd'hui :  
    - D√©couvrez comment l'IA peut transformer vos habitudes culinaires.  
    - Partagez vos retours et vos recettes avec notre communaut√© grandissante.  

    Ensemble, red√©couvrons le **plaisir de cuisiner**, en alliant **innovation, simplicit√© et saveur**. üçΩÔ∏è‚ú®  
    
        
        """
    )
    render_footer()

# Page : G√©n√©rer avec IA

def ia_choice_page():
    """
    Page Streamlit pour g√©n√©rer une recette avec l'IA.
    """
    render_navbar()
    st.title("G√©n√©rer une recette avec l'IA üçΩÔ∏è")

    # Collecte des pr√©f√©rences de l'utilisateur
    st.write("### Vos pr√©f√©rences culinaires")

    # Type de plat
    dish_type = st.selectbox(
        "Quel type de plat souhaitez-vous ?",
        ["Entr√©e", "Plat principal", "Dessert", "Boisson"]
    )

    # Pr√©f√©rence de saveurs
    flavor = st.radio(
        "Pr√©f√©rence de saveurs :",
        ["Sucr√©e", "Sal√©e", "√âpic√©e", "Acide"]
    )

    # Ingr√©dients sp√©cifiques
    include_ingredients = st.text_input(
        "Ingr√©dients √† inclure (ex : tomate, poulet, chocolat) :", ""
    )

    exclude_ingredients = st.text_input(
        "Ingr√©dients √† √©viter (ex : gluten, lactose) :", ""
    )

    # R√©gime alimentaire
    dietary_preferences = st.radio(
        "Suivez-vous un r√©gime sp√©cifique ?",
        ["Aucun", "V√©g√©tarien", "Vegan", "Sans gluten"]
    )

    # Budget
    budget = st.slider(
        "Quel est votre budget en euros pour les ingr√©dients ?",
        5, 100, 20
    )

    # V√©rification des incoh√©rences
    if dietary_preferences in ["V√©g√©tarien", "Vegan"] and "viande" in include_ingredients.lower():
        st.warning("‚ö†Ô∏è Vous avez s√©lectionn√© un r√©gime v√©g√©tarien/vegan. La viande n'est pas autoris√©e.")
        include_ingredients = ""

    # Bouton pour g√©n√©rer la recette
    if st.button("G√©n√©rer ma recette üöÄ"):
        st.info("G√©n√©ration de la recette en cours...")

        # Cr√©ation du dictionnaire des pr√©f√©rences
        preferences = {
            "dish_type": dish_type,
            "flavor": flavor,
            "include_ingredients": include_ingredients,
            "exclude_ingredients": exclude_ingredients,
            "dietary_preferences": dietary_preferences,
            "budget": budget
        }

        # Appel de la fonction generate_recipe
        try:
            recipe = generate_recipe(preferences)
            st.success("üéâ Voici votre recette personnalis√©e :")
            st.markdown(recipe)  # Affiche la recette g√©n√©r√©e en markdown
        except Exception as e:
            st.error(f"‚ùå Erreur lors de la g√©n√©ration de la recette : {e}")

    render_footer()


# Page : Recherche dans CSV

def csv_search_page():
    render_navbar()
    st.title("üîé Recherche de recettes dans la base CSV")

    # Options pour la recherche
    include_ingredients = st.text_input("üìù Ingr√©dients √† inclure (s√©par√©s par des virgules) :")
    exclude_ingredients = st.text_input("‚ùå Ingr√©dients √† exclure (s√©par√©s par des virgules) :")
    max_ingredients = st.number_input("üî¢ Nombre maximal d'ingr√©dients dans la recette :", min_value=1, step=1, value=10)

    if st.button("Rechercher"):
        try:
            # Filtrer les recettes
            recipes = filter_recipes_by_ingredients(CSV_FILE_PATH, include_ingredients, exclude_ingredients, max_ingredients)

            # Afficher les recettes trouv√©es
            if recipes.empty:
                st.warning("Aucune recette ne correspond aux crit√®res s√©lectionn√©s.")
            else:
                st.success(f"{len(recipes)} recette(s) trouv√©e(s) :")
                for _, row in recipes.iterrows():
                    # Titre stylis√© de la recette
                    st.markdown(
                        f"""
                        <div style='
                            background-color: #FFFAE6; 
                            padding: 10px; 
                            border-radius: 5px; 
                            margin-top: 10px; 
                            box-shadow: 0px 2px 5px rgba(0,0,0,0.1);'
                        >
                            <h3 style='color: #2C3E50; text-align: center;'>{row['title']}</h3>
                        </div>
                        """,
                        unsafe_allow_html=True
                    )

                    # Affichage des ingr√©dients sous forme de liste propre
                    st.markdown("**üõí Ingr√©dients :**")
                    ingredients = eval(row['ingredients'])  # Convertir la cha√Æne en liste
                    for ingredient in ingredients:  # Afficher chaque √©l√©ment proprement
                        st.markdown(f"- {ingredient}")

                    # Affichage des instructions sous forme de texte continu
                    st.markdown("**üë®‚Äçüç≥ Instructions :**")
                    instructions = eval(row['directions'])  # Convertir en liste
                    instructions_text = " ".join(instructions)  # Fusionner les √©tapes
                    st.write(instructions_text)

                    # Ligne de s√©paration entre les recettes
                    st.markdown("---")

        except Exception as e:
            st.error(f"Erreur lors de la recherche : {e}")

    render_footer()

# Page Guide

def guide_page():
    render_navbar()
    st.title("Guide d'utilisation de Clicook üöÄ")

    st.markdown("""
    ## Bienvenue dans le guide d'utilisation de **Clicook** üçΩÔ∏è  
    Voici tout ce que vous devez savoir pour tirer le meilleur parti de notre application culinaire :

    ---

    ### üîé **Recherche dans le CSV**  
    - Entrez les ingr√©dients que vous **avez** dans le champ *"Ingr√©dients √† inclure"*.  
    - Si vous souhaitez **√©viter certains ingr√©dients**, renseignez-les dans le champ *"Ingr√©dients √† exclure"*.  
    - Vous pouvez aussi **limiter** le nombre maximal d'ingr√©dients pour des recettes simples.  
    - Cliquez sur **Rechercher** pour voir les recettes correspondantes.

    #### Exemple :  
    - **Ingr√©dients √† inclure** : *poulet, tomate*  
    - **Ingr√©dients √† exclure** : *lactose*  
    - **Nombre maximal d'ingr√©dients** : *5*  

    Vous obtiendrez des recettes rapides et adapt√©es √† votre cuisine !

    ---

    ### üß† **G√©n√©ration de recette avec IA**  
    - S√©lectionnez le **type de plat** : *entr√©e, plat principal, dessert ou boisson*.  
    - Indiquez vos **saveurs pr√©f√©r√©es** : *sucr√©e, sal√©e, √©pic√©e ou acide*.  
    - Ajoutez les **ingr√©dients sp√©cifiques** que vous souhaitez inclure ou √©viter.  
    - Pr√©cisez votre **r√©gime alimentaire** : *aucun, v√©g√©tarien, vegan, sans gluten*.  
    - Fixez votre **budget** pour optimiser vos d√©penses.  

    Cliquez sur **"G√©n√©rer ma recette"** pour obtenir une recette personnalis√©e cr√©√©e par notre IA.

    #### Exemple :  
    - **Type de plat** : *Plat principal*  
    - **Saveurs** : *Sal√©e*  
    - **Ingr√©dients √† inclure** : *poulet, riz*  
    - **Budget** : *15 euros*  

    L'IA vous proposera une recette savoureuse en quelques secondes.

    ---

    ### üë®‚Äçüç≥ **Astuce Cuisine**  
    - **Utilisez les filtres intelligemment** pour trouver des recettes simples avec peu d'ingr√©dients.  
    - **Explorez** les diff√©rentes saveurs pour des repas vari√©s et √©quilibr√©s.  
    - **Ajoutez des √©quipements** disponibles dans l'application pour des suggestions adapt√©es √† votre mat√©riel.

    ---

    ### üéØ **Rejoignez-nous sur les r√©seaux sociaux !**  
    Suivez-nous pour plus d'astuces, d'inspirations et pour partager vos propres cr√©ations culinaires :  
    - üì∏ [Instagram](#)  
    - üëç [Facebook](#)  

    Merci de choisir **Clicook** ! Ensemble, r√©inventons le plaisir de cuisiner. üç≤  
    """, unsafe_allow_html=True)

    render_footer()


# Gestion des pages
page = st.query_params.get("page", "home")

if page == "home":
    home_page()
elif page == "about_us":
    about_us_page()
elif page == "ia_choice":
    ia_choice_page()
elif page == "csv_search":
    csv_search_page()
elif page == "guide":
    guide_page()
